Transaction ID				Sender Account Number	Sender Name		Receiver Account Number	Receiver Name		Date & Time		Transaction Type	Amount
9d6fb58b-0ccb-45cd-8d06-37f6b3ece549	3700687133		Louis Johnson		2096693240		Charles Moss		2025-05-01 22:21:16	Withdrawal		40985.96
15891ac2-d44d-44b7-8455-c1fd129f5a5b	1360508603		Brenda Wade		3079202455		Craig Walters		2025-05-01 00:39:32	Transfer		70838.39
16da3dda-e485-4e4d-8de2-d2d6241ebd9a	4189961148		Michelle Andrews	5552513381		Jonathan Ramos		2025-05-01 20:02:59	Deposit			69954.35
1da95fd3-a820-441b-b897-2547d8d0c403	5809924640		Frank Graham		8604934310		Jonathan Brown		2025-05-01 07:09:12	Transfer		6545.92
0c8a40ce-2301-4aac-b17d-01da3c771a4c	6657218747		Katie Brennan		2181270233		Kyle Gillespie		2025-05-01 20:08:52	Transfer		10227.59
2af6b992-e241-49cb-985a-9a71c8bd2d08	1485622298		Jack Jimenez		3587429759		Matthew Weber		2025-05-01 01:17:19	Withdrawal		96273.3
b67236f0-1185-4892-a05c-02345dd520ad	4101168261		Pamela Clark		9798562776		Mary Mitchell		2025-05-01 21:21:04	Deposit			61114.56
9c632ac5-2cf8-4362-9e5d-3a8e0451f286	4805309967		Robert Meyer		9427391896		Amber Ortega		2025-05-01 11:42:12	Withdrawal		71656.07
f60364b7-0525-4453-af76-7d0176e40248	4760651286		Laura Cummings		9122689837		Deborah Bailey		2025-05-01 00:32:51	Transfer		11207.65
7cd14079-7065-4c82-9fa3-e6d21149a1d5	9029458310		Jessica Henderson	1072518789		Todd Carlson		2025-05-01 07:54:12	Withdrawal		55161.48
6496c7f1-51fb-4d98-b96b-fe419aca21f3	1170017362		Emily Fitzpatrick	6563146157		Jenna Hebert		2025-05-01 13:48:26	Transfer		43095.21
d440e327-e081-4d25-9a78-6d73da6ba8c1	2297539854		Jorge Hurley		3144081862		Amber Hill		2025-05-01 22:36:49	Deposit			82235.87
521da6d2-b819-4572-afe6-299b5aaefd99	2953440195		Priscilla Foster	1360124224		Louis Hendricks		2025-05-01 02:43:36	Deposit			94692.04
b87fd1b2-cf1a-437e-8b25-31c8197f6d33	1937669315		Adrienne Pham		9819293716		Steven Dougherty	2025-05-01 09:47:25	Transfer		84593.37
4698cfa6-45a0-44d6-b071-9776c381c7cf	6161826159		John Brown		1976977592		Haley Bridges		2025-05-01 19:18:26	Withdrawal		32664.97






"C:\Program Files\Microsoft\jdk-17.0.12.7-hotspot\bin\java.exe" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\lib\idea_rt.jar=55669:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.2.2\bin" -Dfile.encoding=UTF-8 -classpath C:\Users\shanthosh.s\IdeaProjects\BankTransactionIngestor\target\classes;C:\Users\shanthosh.s\.m2\repository\org\mongodb\mongodb-driver-sync\4.11.0\mongodb-driver-sync-4.11.0.jar;C:\Users\shanthosh.s\.m2\repository\org\mongodb\bson\4.11.0\bson-4.11.0.jar;C:\Users\shanthosh.s\.m2\repository\org\mongodb\mongodb-driver-core\4.11.0\mongodb-driver-core-4.11.0.jar;C:\Users\shanthosh.s\.m2\repository\org\mongodb\bson-record-codec\4.11.0\bson-record-codec-4.11.0.jar com.example1.Main
Skipping malformed line: Transaction ID				Sender Account Number	Sender Name		Receiver Account Number	Receiver Name		Date & Time		Transaction Type	Amount
Skipping malformed line: 9d6fb58b-0ccb-45cd-8d06-37f6b3ece549	3700687133		Louis Johnson		2096693240		Charles Moss		2025-05-01 22:21:16	Withdrawal		40985.96
Skipping malformed line: 15891ac2-d44d-44b7-8455-c1fd129f5a5b	1360508603		Brenda Wade		3079202455		Craig Walters		2025-05-01 00:39:32	Transfer		70838.39
Skipping malformed line: 16da3dda-e485-4e4d-8de2-d2d6241ebd9a	4189961148		Michelle Andrews	5552513381		Jonathan Ramos		2025-05-01 20:02:59	Deposit			69954.35
Skipping malformed line: 1da95fd3-a820-441b-b897-2547d8d0c403	5809924640		Frank Graham		8604934310		Jonathan Brown		2025-05-01 07:09:12	Transfer		6545.92
Skipping malformed line: 0c8a40ce-2301-4aac-b17d-01da3c771a4c	6657218747		Katie Brennan		2181270233		Kyle Gillespie		2025-05-01 20:08:52	Transfer		10227.59
Skipping malformed line: 2af6b992-e241-49cb-985a-9a71c8bd2d08	1485622298		Jack Jimenez		3587429759		Matthew Weber		2025-05-01 01:17:19	Withdrawal		96273.3
Skipping malformed line: b67236f0-1185-4892-a05c-02345dd520ad	4101168261		Pamela Clark		9798562776		Mary Mitchell		2025-05-01 21:21:04	Deposit			61114.56
Skipping malformed line: 9c632ac5-2cf8-4362-9e5d-3a8e0451f286	4805309967		Robert Meyer		9427391896		Amber Ortega		2025-05-01 11:42:12	Withdrawal		71656.07
Skipping malformed line: f60364b7-0525-4453-af76-7d0176e40248	4760651286		Laura Cummings		9122689837		Deborah Bailey		2025-05-01 00:32:51	Transfer		11207.65
Skipping malformed line: 7cd14079-7065-4c82-9fa3-e6d21149a1d5	9029458310		Jessica Henderson	1072518789		Todd Carlson		2025-05-01 07:54:12	Withdrawal		55161.48
Skipping malformed line: 6496c7f1-51fb-4d98-b96b-fe419aca21f3	1170017362		Emily Fitzpatrick	6563146157		Jenna Hebert		2025-05-01 13:48:26	Transfer		43095.21
Skipping malformed line: d440e327-e081-4d25-9a78-6d73da6ba8c1	2297539854		Jorge Hurley		3144081862		Amber Hill		2025-05-01 22:36:49	Deposit			82235.87
Skipping malformed line: 521da6d2-b819-4572-afe6-299b5aaefd99	2953440195		Priscilla Foster	1360124224		Louis Hendricks		2025-05-01 02:43:36	Deposit			94692.04
Skipping malformed line: b87fd1b2-cf1a-437e-8b25-31c8197f6d33	1937669315		Adrienne Pham		9819293716		Steven Dougherty	2025-05-01 09:47:25	Transfer		84593.37
Skipping malformed line: 4698cfa6-45a0-44d6-b071-9776c381c7cf	6161826159		John Brown		1976977592		Haley Bridges		2025-05-01 19:18:26	Withdrawal		32664.97
May 07, 2025 5:57:47 PM com.mongodb.internal.diagnostics.logging.Loggers shouldUseSLF4J
WARNING: SLF4J not found on the classpath.  Logging is disabled for the 'org.mongodb.driver' component
Transaction inserted successfully into MongoDB.....!

Process finished with exit code 0

package parser;

import annotations.FixedField;
import java.lang.reflect.Field;

public class FixedWidthParser {

    public static <T> T parseLine(String line, Class<T> clazz) throws Exception {
        T instance = clazz.getDeclaredConstructor().newInstance();
        int currentIndex = 0;

        for (Field field : clazz.getDeclaredFields()) {
            FixedField annotation = field.getAnnotation(FixedField.class);
            if (annotation != null) {
                int length = annotation.length();
                if (currentIndex + length > line.length()) {
                    throw new Exception("Line too short for field: " + field.getName());
                }

                String value = line.substring(currentIndex, currentIndex + length).trim();
                currentIndex += length;

                if (annotation.required() && value.isEmpty()) {
                    throw new Exception("Missing required field: " + field.getName());
                }

                if (!annotation.allowedValues().isEmpty()) {
                    String[] allowed = annotation.allowedValues().split(",");
                    boolean match = false;
                    for (String a : allowed) {
                        if (a.equalsIgnoreCase(value)) {
                            match = true;
                            break;
                        }
                    }
                    if (!match) {
                        throw new Exception("Invalid value for field '" + field.getName() + "': " + value);
                    }
                }

                if (!annotation.format().isEmpty()) {
                    if (!value.matches(annotation.format())) {
                        throw new Exception("Invalid format for field '" + field.getName() + "': " + value);
                    }
                }

                field.setAccessible(true);
                field.set(instance, value);
            }
        }

        return instance;
    }
}



package runner;

import model.CustomerDetails;
import parser.FixedWidthParser;

import java.io.*;

public class CustomerDetailsValidator {
    public static void main(String[] args) {
        File file = new File("data/ControlMay15/CustomerDetails.txt");

        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
            String line;
            int lineNum = 0;

            while ((line = reader.readLine()) != null) {
                lineNum++;
                if (line.startsWith("HDR|") || line.startsWith("TRL|")) continue;

                try {
                    CustomerDetails customer = FixedWidthParser.parseLine(line, CustomerDetails.class);
                    System.out.println("Valid Line " + lineNum + ": " + customer.customerId + ", " + customer.customerName);
                } catch (Exception e) {
                    System.out.println("Invalid Line " + lineNum + ": " + e.getMessage());
                }
            }

        } catch (IOException e) {
            System.err.println("Error reading file: " + e.getMessage());
        }
    }
}
